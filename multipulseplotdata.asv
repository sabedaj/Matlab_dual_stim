function multipulseplotdata(ratestruct,savefilename,area)
s = RandStream('mt19937ar','Seed',296);
AMPall=[2 5 6 8 10];
baselinetime=1:89;
Pulseall=1:5;
 subselectbaseline=1:2:89;
 SD_supression=0.5;
 % cutoffs for each pen
 startpen=[datetime(2022,09,06,22,20,00) datetime(2022,09,07,19,30,00) datetime(2022,10,10,18,30,00) datetime(2022,10,11,16,30,00) datetime(2022,11,21,18,30,00) datetime(2022,11,22,22,00,00)];
 endpen=[datetime(2022,09,07,18,30,00) datetime(2022,09,08,15,30,00) datetime(2022,10,11,13,30,00) datetime(2022,10,12,11,30,00) datetime(2022,11,22,16,30,00) datetime(2022,11,23,12,00,00)];
 
% pre-processing
numfolderstotal=size(ratestruct,1)-sum(cellfun(@isempty, ratestruct));
ratespiking=[];
ratespiking_pensplit=[];
Ratestitchspiking=[];
windowsize=3.3333;%in ms for stitching the data 3.33333
if strcmp(area,'v1')
    chnrng=65:128;
elseif strcmp(area,'v2')
    chnrng=1:64;
end

for numerfolders=1:numfolderstotal
    trialend=size(savefilename{numerfolders}{4},1);
    yrmnth=['YM' savefilename{numerfolders}{3}(1:6)];
    for trial=1:trialend
        trialcheck=['T', num2str(trial)];
        stimchncheck=['SChn', num2str(savefilename{numerfolders}{4}(trial,3))];
        AMPcheck=['A' num2str(savefilename{numerfolders}{4}(trial,2))];
        if strcmp(AMPcheck,'A-1')
            continue; %AMPcheck='A0';
        end
        Pulse=savefilename{numerfolders}{4}(trial,4);
        Pulsecheck=['P' num2str(Pulse)];
        fold_int=dir(['*' savefilename{numerfolders}{5}]);
        if strcmp(savefilename{numerfolders}{5},'220907_235749')
            %make first plot showing individual responses to stim
            cd(fold_int.name);
            plotstackedtrigs(70, trial, (1:40), 'DT')
            cd(fold_int.folder);
        end
        %stitching
        
        chnstitch=['Chn' num2str(savefilename{numerfolders}{4}(trial,3))];

        for pulsit=5:-1:Pulse+1
            Pulsecheckstitch=['P' num2str(pulsit)];
            if pulsit>1
            Ratestitchspiking.(yrmnth).(AMPcheck).(chnstitch).(Pulsecheckstitch)(:,94+ceil(windowsize*(Pulse-1)):93+ceil(windowsize*Pulse))=nanmean(ratestruct{numerfolders}.(trialcheck)(chnrng,94+ceil(windowsize*(Pulse-1)):93+ceil(windowsize*Pulse),:).*1000,3);
            else
                Ratestitchspiking.(yrmnth).(AMPcheck).(chnstitch).(Pulsecheckstitch)(:,91+ceil(windowsize*(Pulse-1)):93+ceil(windowsize*Pulse))=nanmean(ratestruct{numerfolders}.(trialcheck)(chnrng,91+ceil(windowsize*(Pulse-1)):93+ceil(windowsize*Pulse),:).*1000,3);
            end
        end
        if Pulse>1
        Ratestitchspiking.(yrmnth).(AMPcheck).(chnstitch).(Pulsecheck)(:,94+ceil(windowsize*(Pulse-1)):391)=nanmean(ratestruct{numerfolders}.(trialcheck)(chnrng,94+ceil(windowsize*(Pulse-1)):391,:).*1000,3);
        else
            Ratestitchspiking.(yrmnth).(AMPcheck).(chnstitch).(Pulsecheck)(:,91+ceil(windowsize*(Pulse-1)):391)=nanmean(ratestruct{numerfolders}.(trialcheck)(chnrng,91+ceil(windowsize*(Pulse-1)):391,:).*1000,3);
        end
        datatoinclude=nanmean(ratestruct{numerfolders}.(trialcheck)(chnrng,:,:).*1000,3);%-mean(nanmean(ratestruct{numerfolders}.(trialcheck)(chnrng,1:90,:).*1000,3),2);
        datatoinclude=datatoinclude./max(datatoinclude(:,1:90),[],2);%-nanmean(datatoinclude(:,1:90),2))./std(datatoinclude(:,1:90),[],2);%z-score
        %datatoinclude(isinf(datatoinclude))=nan;
        if isfield(ratespiking,(AMPcheck)) && isfield(ratespiking.(AMPcheck),(Pulsecheck))
            ratespiking.(AMPcheck).(Pulsecheck)=cat(1,ratespiking.(AMPcheck).(Pulsecheck),datatoinclude);%-nanmean(ratestruct{numerfolders}.(trialcheck)(chnrng,baselinetime,:).*1000,[2 3]));
            flnm.(AMPcheck).(Pulsecheck)=[flnm.(AMPcheck).(Pulsecheck);savefilename{numerfolders}{5}];%-nanmean(ratestruct{numerfolders}.(trialcheck)(chnrng,baselinetime,:).*1000,[2 3]));
        else
            ratespiking.(AMPcheck).(Pulsecheck)=datatoinclude;
            flnm.(AMPcheck).(Pulsecheck)=[savefilename{numerfolders}{5}];
        end
        %data grouped based on penetration
        % first check whether the datetime is within pen range  savefilename{numerfolders}{5} is in yymmdd_hhmmss format ensure pen is at the front 
        for pen=1:length(startpen)
            if datetime(savefilename{numerfolders}{5},'InputFormat','yyMMdd_HHmmss')>startpen(pen) && datetime(savefilename{numerfolders}{5},'InputFormat','yyMMdd_HHmmss')<endpen(pen)
                pencheck=['Pen' num2str(pen)];
                if pen==4 && ~isempty(fold_int) && ~strcmp(fold_int.name(1:10),'multipulse')
                    continue
                end
                if isfield(ratespiking_pensplit,(pencheck)) && isfield(ratespiking_pensplit.(pencheck),(AMPcheck)) && isfield(ratespiking_pensplit.(pencheck).(AMPcheck),(stimchncheck))&& isfield(ratespiking_pensplit.(pencheck).(AMPcheck).(stimchncheck),(Pulsecheck))
                    ratespiking_pensplit.(pencheck).(AMPcheck).(stimchncheck).(Pulsecheck)=cat(1,ratespiking_pensplit.(pencheck).(AMPcheck).(stimchncheck).(Pulsecheck),datatoinclude);%-nanmean(ratestruct{numerfolders}.(trialcheck)(chnrng,baselinetime,:).*1000,[2 3]));
                else
                    ratespiking_pensplit.(pencheck).(AMPcheck).(stimchncheck).(Pulsecheck)=datatoinclude;
                end
            end
        end

        
         thresh=squeeze(mean(datatoinclude(:,subselectbaseline),2)+(std(datatoinclude(:,subselectbaseline),[],2).*3));
        notsigsingle=squeeze(mean(datatoinclude(:,92:181),2))<=thresh;
        Ratestitchspiking.(yrmnth).(AMPcheck).(chnstitch).(Pulsecheck)(notsigsingle,:)=nan;

    end
end
ratespiking_suppression=ratespiking;%use this later to check suppression


%plot significant values for all recorded channels
ratespiking_mean=zeros(length(AMPall),length(Pulseall));
ratespiking_std=zeros(length(AMPall),length(Pulseall));
ratepeak=zeros(length(AMPall),length(Pulseall));
ratepeakstd=zeros(length(AMPall),length(Pulseall));
numsig=zeros(length(AMPall),5);
numelect=zeros(length(AMPall)+1,5+1);
numelect(1,2:end)=Pulseall;
numelect(2:end,1)=AMPall';
StimElectcount=zeros(length(AMPall),5);
%loop through amp and number of pulses then plot
avgtime=91:130;
figure
	p = panel();
	p.pack(2, 3);
for AMP=1:length(AMPall)
    AMPcheck=['A' num2str(AMPall(AMP))];
    if AMP<4
        p(1,AMP).select();
    else
        p(2,AMP-3).select();
    end
    ax=p.de.axis;
    ax=ax(AMP);
    hold on
    
    for Pulse=1:length(Pulseall)
        Pulsecheck=['P' num2str(Pulseall(Pulse))];
        %make sure only responding elect included
       timepeak=round(90+Pulse*3.333):round(120+Pulse*3.333);
        if isfield(ratespiking.(AMPcheck),(Pulsecheck))
        thresh=squeeze(mean(ratespiking.(AMPcheck).(Pulsecheck)(:,subselectbaseline),2)+(std(ratespiking.(AMPcheck).(Pulsecheck)(:,subselectbaseline),[],2).*3));
        notsigsingle=squeeze(mean(ratespiking.(AMPcheck).(Pulsecheck)(:,timepeak),2))<=0;
        ratespiking.(AMPcheck).(Pulsecheck)(notsigsingle,:)=nan;
        numsig(AMP,Pulse)=sum(~notsigsingle);
        %ratespiking.(AMPcheck).(Pulsecheck)= ratespiking.(AMPcheck).(Pulsecheck)-squeeze(mean(ratespiking.(AMPcheck).(Pulsecheck)(:,subselectbaseline),2));
        
        numelect(AMP+1,Pulse+1)= sum(~isnan(ratespiking.(AMPcheck).(Pulsecheck)(:,1)));
        % Reshape the array into a 2D matrix with 128 elements per column
        reshapedArray = reshape(ratespiking.(AMPcheck).(Pulsecheck)(:,1), 64, []);
        % Count the number of non-NaN values in each column
        StimElectcount(AMP,Pulse) = sum(~isnan(sum(~isnan(reshapedArray))));
        maxdat=max(ratespiking.(AMPcheck).(Pulsecheck)(:,round(90+Pulse*3.333):round(95+Pulse*3.333)),[],2);
        ratespiking_mean(AMP,Pulse)=nanmean(ratespiking.(AMPcheck).(Pulsecheck)(:,timepeak),'all');%mean(sum(ratespiking.(AMPcheck).(Pulsecheck)(:,timepeak),2),'omitnan');%%nanmean(maxdat(maxdat~=0),'all');%nanmean(ratespiking.(AMPcheck).(Pulsecheck)(:,avgtime),'all');
        ratespiking_std(AMP,Pulse)=SEM(ratespiking.(AMPcheck).(Pulsecheck)(:,timepeak),0);
        %peakvals
        ratepeak(AMP,Pulse)=mean(maxdat,'omitnan');
        ratepeakstd(AMP,Pulse)=SEM(maxdat,0);
       
        stdshade(ratespiking.(AMPcheck).(Pulsecheck),0.2,[0 Pulse/length(Pulseall) 1/Pulse],[-90:300],1,ax)
        end
    end
    lgd=legend('1','2','3','4','5');
    lgd.Title.String = '# pulses';
    xlim([-90,90])
    title(['All data' num2str(AMPall(AMP)) '\muA'])
    ylabel('Sp/s')
    xlabel('Time (ms)')
    set(gca,'TickDir','out');
    ylim([0 5])
    for j = 2:size(numelect,2)
        text(j*10-80, 65, num2str(numelect(AMP+1,j)), 'HorizontalAlignment', 'center');
    end
end



% p(2,3).select();
% hold on;
% for Pulse=1:length(Pulseall)
% errorbar(AMPall,ratespiking_mean(:,Pulse),ratespiking_std(:,Pulse),'Color',[0 Pulse/length(Pulseall) 1/Pulse])
% end
%  lgd=legend('1','2','3','4','5');
% lgd.Title.String = '# pulses';
%     title('Average 1-40ms after stim')
%     ylabel('Sp/s')
%     xlabel('Current \muA')
%     set(gca,'TickDir','out');
    
    figure;
    p = panel;
    p.pack(1,2)
    p(1,1).select();
    hold on
    for Pulse=1:length(Pulseall)
        errorbar(AMPall,ratepeak(:,Pulse),ratepeakstd(:,Pulse),'Color',[0 Pulse/length(Pulseall) 1/Pulse])
    end
    lgd=legend('1','2','3','4','5');
    lgd.Title.String = '# pulses';
    title('Peak response all data')
    ylabel('Sp/s')
    xlabel('Current \muA')
    set(gca,'TickDir','out');
    %for p2 plot the average
    p(1,2).select();
    hold on
    for Pulse=1:length(Pulseall)
        errorbar(AMPall,ratespiking_mean(:,Pulse),ratespiking_std(:,Pulse),'Color',[0 Pulse/length(Pulseall) 1/Pulse])
    end
         lgd=legend('1','2','3','4','5');
        lgd.Title.String = '# pulses';
            title('All data Average 1-30ms after stim')
            ylabel('Sp/s')
            xlabel('Current \muA')
            set(gca,'TickDir','out');

figure;
    p = panel;
    p.pack(1,2)
    p(1,1).select();
    hold on
    for AMP=1:length(AMPall)
        errorbar(Pulseall,ratepeak(AMP,:),ratepeakstd(AMP,:),'Color',[0 AMP/length(AMPall) 1/AMP])
    end
    lgd=legend('2','5','6','8','10');
    lgd.Title.String = 'Current \muA';
    title('All data Peak response')
    ylabel('Sp/s')
    xlabel('# Pulses')
    set(gca,'TickDir','out');
    %for p2 plot the average
    p(1,2).select();
    hold on
    for AMP=1:length(AMPall)
        errorbar(Pulseall,ratespiking_mean(AMP,:),ratespiking_std(AMP,:),'Color',[0 AMP/length(AMPall) 1/AMP])
    end

    lgd=legend('2','5','6','8','10');
    lgd.Title.String = 'Current \muA';
            title('All data Average 1-30ms after stim')
            ylabel('Sp/s')
    xlabel('# Pulses')
            set(gca,'TickDir','out');

%% plot surpression now with all significant channels

ratespiking_suppression_mean=zeros(length(AMPall),length(Pulseall));
ratespiking_suppression_std=zeros(length(AMPall),length(Pulseall));
ratepeak_suppression=zeros(length(AMPall),length(Pulseall));
ratepeakstd_suppression=zeros(length(AMPall),length(Pulseall));
numsig_suppression=zeros(length(AMPall),5);
numelect_suppression=zeros(length(AMPall),5);
StimElectcount_suppression=zeros(length(AMPall),5);
%loop through amp and number of pulses then plot
ratespiking_suppression=ratespiking;
figure
    p = panel();
    p.pack(2, 3);
for AMP=1:length(AMPall)
    AMPcheck=['A' num2str(AMPall(AMP))];
    if AMP<4
        p(1,AMP).select();
    else
        p(2,AMP-3).select();
    end
    ax=p.de.axis;
    ax=ax(AMP);
    hold on
    
    for Pulse=1:length(Pulseall)
        Pulsecheck=['P' num2str(Pulseall(Pulse))];
        %make sure only responding elect included
       timesup=round(100+Pulse*3.333):175;
        if isfield(ratespiking_suppression.(AMPcheck),(Pulsecheck))
%         thresh=squeeze(mean(ratespiking_suppression.(AMPcheck).(Pulsecheck)(:,subselectbaseline),2)-(std(ratespiking_suppression.(AMPcheck).(Pulsecheck)(:,subselectbaseline),[],2).*SD_supression));
%         notsigsingle=squeeze(mean(ratespiking_suppression.(AMPcheck).(Pulsecheck)(:,timesup),2))>=thresh;
%         ratespiking_suppression.(AMPcheck).(Pulsecheck)(notsigsingle,:)=nan;
%         numsig_suppression(AMP,Pulse)=sum(~notsigsingle);
          
        numelect_suppression(AMP,Pulse)= sum(~isnan(ratespiking_suppression.(AMPcheck).(Pulsecheck)(:,1)));
        % Reshape the array into a 2D matrix with 128 elements per column
        reshapedArray = reshape(ratespiking_suppression.(AMPcheck).(Pulsecheck)(:,1), 64, []);
        % Count the number of non-NaN values in each column
        StimElectcount_suppression(AMP,Pulse) = sum(~isnan(sum(~isnan(reshapedArray))));
        maxdat=max(ratespiking_suppression.(AMPcheck).(Pulsecheck)(:,timesup),[],2);
        ratespiking_suppression_mean(AMP,Pulse)=nanmean(ratespiking_suppression.(AMPcheck).(Pulsecheck)(:,timesup),'all');
            %peakvals
        ratepeak_suppression(AMP,Pulse)=mean(maxdat,'omitnan');
        ratepeakstd_suppression(AMP,Pulse)=SEM(maxdat,0);
        stdshade(ratespiking_suppression.(AMPcheck).(Pulsecheck),0.2,[0 Pulse/length(Pulseall) 1/Pulse],[-90:300],1,ax)

        end
    end
    lgd=legend('1','2','3','4','5');
    lgd.Title.String = '# pulses';
    xlim([-90,90])
    title(['All data suppression' num2str(AMPall(AMP)) '\muA'])
    ylabel('Sp/s')
    xlabel('Time (ms)')
    set(gca,'TickDir','out');
    ylim([-20 75])
    for j = 1:size(numelect_suppression,2)
        text(j*10-80, 65, num2str(numelect_suppression(AMP,j)), 'HorizontalAlignment', 'center');
    end

end

% p(2,3).select();
% hold on;
% 
% for Pulse=1:length(Pulseall)
% errorbar(AMPall,ratespiking_suppression_mean(:,Pulse),ratespiking_suppression_std(:,Pulse),'Color',[0 Pulse/length(Pulseall) 1/Pulse])
% end
%  lgd=legend('1','2','3','4','5');
% lgd.Title.String = '# pulses';
%     title('Average 1-40ms after stim')
%     ylabel('Sp/s')
%     xlabel('Current \muA')
%     set(gca,'TickDir','out');
    
    figure;
    p = panel;
    p.pack(1,2)
    p(1,1).select();
    hold on
    for Pulse=1:length(Pulseall)
        errorbar(AMPall,ratepeak_suppression(:,Pulse),ratepeakstd_suppression(:,Pulse),'Color',[0 Pulse/length(Pulseall) 1/Pulse])
    end
    lgd=legend('1','2','3','4','5');
    lgd.Title.String = '# pulses';
    title('All data suppression Peak response')
    ylabel('Sp/s')
    xlabel('Current \muA')
    set(gca,'TickDir','out');
    %for p2 plot the average
    p(1,2).select();
    hold on
    for Pulse=1:length(Pulseall)
        errorbar(AMPall,ratespiking_suppression_mean(:,Pulse),ratespiking_suppression_std(:,Pulse),'Color',[0 Pulse/length(Pulseall) 1/Pulse])
    end
         lgd=legend('1','2','3','4','5');
        lgd.Title.String = '# pulses';
            title('All data suppression Average 1-30ms after stim')
            ylabel('Sp/s')
            xlabel('Current \muA')
            set(gca,'TickDir','out');

figure;
    p = panel;
    p.pack(1,2)
    p(1,1).select();
    hold on
    for AMP=1:length(AMPall)
        errorbar(Pulseall,ratepeak_suppression(AMP,:),ratepeakstd_suppression(AMP,:),'Color',[0 AMP/length(AMPall) 1/AMP])
    end
    lgd=legend('2','5','6','8','10');
    lgd.Title.String = 'Current \muA';
    title('All data suppression Peak response')
    ylabel('Sp/s')
    xlabel('# Pulses')
    set(gca,'TickDir','out');
    %for p2 plot the average
    p(1,2).select();
    hold on
    for AMP=1:length(AMPall)
        errorbar(Pulseall,ratespiking_suppression_mean(AMP,:),ratespiking_suppression_std(AMP,:),'Color',[0 AMP/length(AMPall) 1/AMP])
    end

    lgd=legend('2','5','6','8','10');
    lgd.Title.String = 'Current \muA';
            title('All data suppression Average 1-30ms after stim')
            ylabel('Sp/s')
    xlabel('# Pulses')
            set(gca,'TickDir','out');



    %find nearest neighbour stim chn and add in the unique pulse data
    % use pensplit data to fill in missing data from the stim chn. FIrst ensure there are at least 3 different pulse types e.g. P1 P4 P5 or P2 P3 P4 then fill in the missing data
    % if there are only 2 pulse types then discard chanel from data
    % if there is only 1 pulse type then discard channel from data
   ratespiking_pensplit_stitch=[];
uniquepen=fields(ratespiking_pensplit);
for pen=1:length(uniquepen)
    uniqueamp=fields(ratespiking_pensplit.(uniquepen{pen}));
    for AMP=1:length(uniqueamp)
        uniquechn=fields(ratespiking_pensplit.(uniquepen{pen}).(uniqueamp{AMP}));
        for chn=1:length(uniquechn)
            uniquepulse=fields(ratespiking_pensplit.(uniquepen{pen}).(uniqueamp{AMP}).(uniquechn{chn}));
            if length(uniquepulse)>2
                 ratespiking_pensplit_stitch.(uniquepen{pen}).(uniqueamp{AMP}).(uniquechn{chn})=ratespiking_pensplit.(uniquepen{pen}).(uniqueamp{AMP}).(uniquechn{chn});
                for Pulse=1:5
                    Pulsecheck=['P' num2str(Pulse)];
                    
                    %stitch all data from same stimchn first then deal with missing pulse
                    for pulsit=5:-1:Pulse+1
                        Pulsecheckstitch=['P' num2str(pulsit)];
                        if isfield(ratespiking_pensplit_stitch.(uniquepen{pen}).(uniqueamp{AMP}).(uniquechn{chn}),(Pulsecheck)) && isfield(ratespiking_pensplit_stitch.(uniquepen{pen}).(uniqueamp{AMP}).(uniquechn{chn}),(Pulsecheckstitch))
                        ratespiking_pensplit_stitch.(uniquepen{pen}).(uniqueamp{AMP}).(uniquechn{chn}).(Pulsecheckstitch)(:,94+ceil(windowsize*(Pulse-1)):93+ceil(windowsize*Pulse))=ratespiking_pensplit_stitch.(uniquepen{pen}).(uniqueamp{AMP}).(uniquechn{chn}).(Pulsecheck)(:,94+ceil(windowsize*(Pulse-1)):93+ceil(windowsize*Pulse));
                        else %find the closest match pulse
                            %get number from uniquechn instead of 'CHNxxx'.
                            chnnum_all_text=regexp(uniquechn,'\d+','match');
                            % Convert all chnnums to numerical value
                            chnnum_all  = cellfun(@str2double, chnnum_all_text);
                            chninterest=chnnum_all(chn);
                            chnnum_all_text=uniquechn;
                            chnnum_all_text(chn)=[];
                            chnnum_all(chn)=[];
                            % find nearest neighbour stim chn to chninterest
                            for i=1:size(chnnum_all)
                                [~,idx] = min(abs(chninterest-chnnum_all));
                                if ~isfield(ratespiking_pensplit_stitch.(uniquepen{pen}).(uniqueamp{AMP}).(uniquechn{chn}),(Pulsecheck)) && isfield(ratespiking_pensplit.(uniquepen{pen}).(uniqueamp{AMP}).(chnnum_all_text{idx}),(Pulsecheck)) 
                                    ratespiking_pensplit_stitch.(uniquepen{pen}).(uniqueamp{AMP}).(uniquechn{chn}).(Pulsecheck)=ratespiking_pensplit.(uniquepen{pen}).(uniqueamp{AMP}).(chnnum_all_text{idx}).(Pulsecheck);
                                      break;
                                elseif isfield(ratespiking_pensplit.(uniquepen{pen}).(uniqueamp{AMP}).(chnnum_all_text{idx}),(Pulsecheckstitch)) && ~isfield(ratespiking_pensplit_stitch.(uniquepen{pen}).(uniqueamp{AMP}).(uniquechn{chn}),(Pulsecheckstitch)) && isfield(ratespiking_pensplit_stitch.(uniquepen{pen}).(uniqueamp{AMP}).(uniquechn{chn}),(Pulsecheck))
                                    ratespiking_pensplit_stitch.(uniquepen{pen}).(uniqueamp{AMP}).(uniquechn{chn}).(Pulsecheckstitch)=ratespiking_pensplit.(uniquepen{pen}).(uniqueamp{AMP}).(chnnum_all_text{idx}).(Pulsecheckstitch);
                                    ratespiking_pensplit_stitch.(uniquepen{pen}).(uniqueamp{AMP}).(uniquechn{chn}).(Pulsecheckstitch)(:,94+ceil(windowsize*(Pulse-1)):93+ceil(windowsize*Pulse))=ratespiking_pensplit_stitch.(uniquepen{pen}).(uniqueamp{AMP}).(uniquechn{chn}).(Pulsecheck)(:,94+ceil(windowsize*(Pulse-1)):93+ceil(windowsize*Pulse));
                                    break;
                                elseif isfield(ratespiking_pensplit.(uniquepen{pen}).(uniqueamp{AMP}).(chnnum_all_text{idx}),(Pulsecheckstitch)) && ~isfield(ratespiking_pensplit_stitch.(uniquepen{pen}).(uniqueamp{AMP}).(uniquechn{chn}),(Pulsecheckstitch)) && ~isfield(ratespiking_pensplit_stitch.(uniquepen{pen}).(uniqueamp{AMP}).(uniquechn{chn}),(Pulsecheck))
                                    ratespiking_pensplit_stitch.(uniquepen{pen}).(uniqueamp{AMP}).(uniquechn{chn}).(Pulsecheckstitch)=ratespiking_pensplit.(uniquepen{pen}).(uniqueamp{AMP}).(chnnum_all_text{idx}).(Pulsecheckstitch);
                                else
                                    chnnum_all_text(idx)=[];
                                    chnnum_all(idx)=[];
                                end
                            end
                            
                        end
                    end

                end 
            end
        end
    end
end
    %now combine and plot ratespiking_pensplit_stitch for each pulse and for each current
datallpenspit_stitch=[];
    for pen=1:length(uniquepen)
        uniqueamp=fields(ratespiking_pensplit_stitch.(uniquepen{pen}));
        for AMP=1:length(uniqueamp)
            uniquechn=fields(ratespiking_pensplit_stitch.(uniquepen{pen}).(uniqueamp{AMP}));
            for chn=1:length(uniquechn)
                for Pulse=1:length(Pulseall)
                    Pulsecheck=['P' num2str(Pulseall(Pulse))];
                    if isfield(ratespiking_pensplit_stitch.(uniquepen{pen}).(uniqueamp{AMP}).(uniquechn{chn}),(Pulsecheck)) && isfield(datallpenspit_stitch,(AMPcheck)) && isfield(datallpenspit_stitch.(AMPcheck),(Pulsecheck))
                        datallpenspit_stitch.(uniqueamp{AMP}).(Pulsecheck)=cat(1,datallpenspit_stitch.(uniqueamp{AMP}).(Pulsecheck),ratespiking_pensplit_stitch.(uniquepen{pen}).(uniqueamp{AMP}).(uniquechn{chn}).(Pulsecheck));
                    elseif isfield(ratespiking_pensplit_stitch.(uniquepen{pen}).(uniqueamp{AMP}).(uniquechn{chn}),(Pulsecheck))
                        datallpenspit_stitch.(uniqueamp{AMP}).(Pulsecheck)=ratespiking_pensplit_stitch.(uniquepen{pen}).(uniqueamp{AMP}).(uniquechn{chn}).(Pulsecheck);
                    end
                end
            end
        end
    end
    
    % now plot the stitched data
    figure
    p = panel();
    p.pack(2, 3);
    for AMP=1:length(AMPall)
        AMPcheck=['A' num2str(AMPall(AMP))];
        if AMP<4
            p(1,AMP).select();
        else
            p(2,AMP-3).select();
        end
        ax=p.de.axis;
        ax=ax(AMP);
        hold on
        for Pulse=1:length(Pulseall)
            Pulsecheck=['P' num2str(Pulseall(Pulse))];
            if isfield(datallpenspit_stitch,(AMPcheck)) && isfield(datallpenspit_stitch.(AMPcheck),(Pulsecheck))
                stdshade(datallpenspit_stitch.(AMPcheck).(Pulsecheck),0.2,[0 Pulse/length(Pulseall) 1/Pulse],[-90:300],1,ax)
            end
        end
        lgd=legend('1','2','3','4','5');
        lgd.Title.String = '# pulses';
        xlim([-90,90])
        title(['All data stitch' num2str(AMPall(AMP)) '\muA'])
        ylabel('Sp/s')
        xlabel('Time (ms)')
        set(gca,'TickDir','out');
        ylim([0 20])
    end




%     uniqueym=fields(Ratestitchspiking);
%     for itYM=1:length(uniqueym)
%         %iterate through Ratestitchspiking and average the data
%         uniqueamp=fields(Ratestitchspiking.(uniqueym{itYM}));
%         for itAMP=1:length(uniqueamp)
%             uniquechn=fields(Ratestitchspiking.(uniqueym{itYM}).(uniqueamp{itAMP}));
%             for itCHN=1:length(uniquechn)
%                 
%                 uniquepulse=fields(Ratestitchspiking.(uniqueym{itYM}).(uniqueamp{itAMP}).(uniquechn{itCHN}));
%                 for itPulse=1:5
%                     Pulsecheck=['P' num2str(itPulse)];
%                     if ~isfield(Ratestitchspiking.(uniqueym{itYM}).(uniqueamp{itAMP}).(uniquechn{itCHN}),Pulsecheck) || size(Ratestitchspiking.(uniqueym{itYM}).(uniqueamp{itAMP}).(uniquechn{itCHN}).(Pulsecheck),2)~=391
%                         %get number from uniquechn instead of 'CHNxxx'.
%                         chnnum_all_text=regexp(uniquechn,'\d+','match');
%                         % Convert all chnnums to numerical value
%                         chnnum_all  = cellfun(@str2double, chnnum_all_text);
%                         chninterest=chnnum_all(itCHN);
%                         chnnum_all_text=uniquechn;
%                         chnnum_all_text(itCHN)=[];
%                         chnnum_all(itCHN)=[];
%                         % find nearest neighbour stim chn to chninterest
%                         for i=1:size(chnnum_all)
%                             [~,idx] = min(abs(chninterest-chnnum_all));
%                             if isfield(Ratestitchspiking.(uniqueym{itYM}).(uniqueamp{itAMP}).(chnnum_all_text{idx}),Pulsecheck) && size(Ratestitchspiking.(uniqueym{itYM}).(uniqueamp{itAMP}).(chnnum_all_text{idx}).(Pulsecheck),2)==391
%                                 Ratestitchspiking.(uniqueym{itYM}).(uniqueamp{itAMP}).(uniquechn{itCHN}).(Pulsecheck)=Ratestitchspiking.(uniqueym{itYM}).(uniqueamp{itAMP}).(chnnum_all_text{idx}).(Pulsecheck);
%                                 %add in pulse data from early pulses into late pulse
%                                 for pulsit=5:-1:itPulse
%                                     Pulsecheckstitch=['P' num2str(pulsit)];
%                                     if itPulse==pulsit && size(Ratestitchspiking.(uniqueym{itYM}).(uniqueamp{itAMP}).(uniquechn{itCHN}).(Pulsecheck),2)~=391
%                                         Ratestitchspiking.(uniqueym{itYM}).(uniqueamp{itAMP}).(uniquechn{itCHN}).(Pulsecheckstitch)(:,94+ceil(windowsize*(itPulse-1)):391)=Ratestitchspiking.(uniqueym{itYM}).(uniqueamp{itAMP}).(chnnum_all_text{idx}).(Pulsecheck)(:,94+ceil(windowsize*(itPulse-1)):391);                                      
%                                     else
%                                         Ratestitchspiking.(uniqueym{itYM}).(uniqueamp{itAMP}).(uniquechn{itCHN}).(Pulsecheckstitch)(:,94+ceil(windowsize*(itPulse-1)):93+ceil(windowsize*itPulse))=Ratestitchspiking.(uniqueym{itYM}).(uniqueamp{itAMP}).(chnnum_all_text{idx}).(Pulsecheck)(:,94+ceil(windowsize*(itPulse-1)):93+ceil(windowsize*itPulse));                                      
% %                                     else
% %                                         Ratestitchspiking.(uniqueym{itYM}).(uniqueamp{itAMP}).(uniquechn{itCHN}).(Pulsecheckstitch)(:,91+ceil(windowsize*(itPulse-1)):93+ceil(windowsize*itPulse))=Ratestitchspiking.(uniqueym{itYM}).(uniqueamp{itAMP}).(chnnum_all_text{idx}).(Pulsecheck)(chnrng,91+ceil(windowsize*(itPulse-1)):93+ceil(windowsize*itPulse));
%                                     end
%                                 end
%                                 break;
%                             else
%                                 chnnum_all_text{idx}=[];
%                                 chnnum_all(idx)=nan;
%                                 
%                             end
%                         end
%                     end
%                 end
%             end
%         end
%     end

    
    
    
%     
%     Ratestitchspikingmean=[];
%     for itYM=1:length(uniqueym)
%         %iterate through Ratestitchspiking and average the data
%         uniqueamp=fields(Ratestitchspiking.(uniqueym{itYM}));
%         for itAMP=1:length(uniqueamp)
%             uniquechn=fields(Ratestitchspiking.(uniqueym{itYM}).(uniqueamp{itAMP}));
%             for itCHN=1:length(uniquechn)
%                 uniquepulse=fields(Ratestitchspiking.(uniqueym{itYM}).(uniqueamp{itAMP}).(uniquechn{itCHN}));
%                 for itPulse=1:length(uniquepulse)
%                     %put each unique combination of amp and pulse into a new array so that we can average them later ignoring uniqueym and chn
%                     if length(uniquepulse)>3 && size(Ratestitchspiking.(uniqueym{itYM}).(uniqueamp{itAMP}).(uniquechn{itCHN}).P5,2)==391
%                         if ~isfield(Ratestitchspikingmean,(uniqueamp{itAMP})) || ~isfield(Ratestitchspikingmean.(uniqueamp{itAMP}),(uniquepulse{itPulse}))
%                             Ratestitchspikingmean.(uniqueamp{itAMP}).(uniquepulse{itPulse})=Ratestitchspiking.(uniqueym{itYM}).(uniqueamp{itAMP}).(uniquechn{itCHN}).(uniquepulse{itPulse});
%                         else
%                             Ratestitchspikingmean.(uniqueamp{itAMP}).(uniquepulse{itPulse})=cat(1,Ratestitchspikingmean.(uniqueamp{itAMP}).(uniquepulse{itPulse}),Ratestitchspiking.(uniqueym{itYM}).(uniqueamp{itAMP}).(uniquechn{itCHN}).(uniquepulse{itPulse}));
%                         end
%                     end
% 
%                 end
%             end
%         end
%     
%     end
    %plot Ratestitchspikingmean for each current with the lines on the plot being the pulse data
%     figure;
%     p = panel();
%     p.pack(2, 3);
%     ratestitchmean=zeros(length(AMPall),length(Pulseall));
%     ratestitchstd=zeros(length(AMPall),length(Pulseall));
%     for AMP=1:length(AMPall)
%         AMPcheck=['A' num2str(AMPall(AMP))];
%         if AMP<4
%             p(1,AMP).select();
%         else
%             p(2,AMP-3).select();
%         end
%         ax=p.de.axis;
%         ax=ax(AMP);
%         hold on
%         for Pulse=1:length(Pulseall)
%             Pulsecheck=['P' num2str(Pulseall(Pulse))];
%             if isfield(Ratestitchspikingmean,(AMPcheck)) && isfield(Ratestitchspikingmean.(AMPcheck),(Pulsecheck))
%                 stdshade(Ratestitchspikingmean.(AMPcheck).(Pulsecheck),0.2,[0 Pulse/length(Pulseall) 1/Pulse],[-90:300],1,ax)
%                 ratestitchmean(AMP,Pulse)=nanmean(Ratestitchspikingmean.(AMPcheck).(Pulsecheck)(:,avgtime),'all');
%                 ratestitchstd(AMP,Pulse)=SEM(Ratestitchspikingmean.(AMPcheck).(Pulsecheck)(:,avgtime),0);
%             end
%         end
%         xlim([-90,90])
%         title([num2str(AMPall(AMP)) '\muA'])
%         ylabel('Sp/s')
%         xlabel('Time (ms)')
%         set(gca,'TickDir','out');
%     end
%     lgd=legend('1','2','3','4','5');
%     lgd.Title.String = '# pulses';
% p(2,3).select();
% hold on
% for Pulse=1:length(Pulseall)
%     errorbar(AMPall,ratestitchmean(:,Pulse),ratestitchstd(:,Pulse),'Color',[0 Pulse/length(Pulseall) 1/Pulse])
% 
% end
%  lgd=legend('1','2','3','4','5');
% lgd.Title.String = '# pulses';
%     title('Average 1-20ms after stim,Pulses added')
%     ylabel('Sp/s')
%     xlabel('Current \muA')
%     set(gca,'TickDir','out');

%% This is to plot the limited data of 2 monkeys and 2 penetrations with ALL pulse combinations
% plot the data for each pen if there are pulses 1-5 under the stim chn
% for each pen at each amp and each stimchn go in and check if pulse 1-5 are there
% if they are then add that data to a structure with amp and pulse as fields
% then plot the data
datincludestack=[];
stitchdata=[];
countit=0;
%initialise spikecountStitch for amplitudes
for AMP=1:length(AMPall)
    AMPcheck=['A' num2str(AMPall(AMP))];
        spikecountStitch.(AMPcheck)=nan(64,5,64*length(startpen));
        spikecountStitchsup.(AMPcheck)=nan(64,5,64*length(startpen));
end

for pen=1:length(startpen)
    pencheck=['Pen' num2str(pen)];
    if isfield(ratespiking_pensplit,(pencheck))
        for AMP=1:length(AMPall)
            AMPcheck=['A' num2str(AMPall(AMP))];
            if isfield(ratespiking_pensplit.(pencheck),(AMPcheck))
                for chn=65:128
                    stimchncheck=['SChn' num2str(chn)];
                    countit=(pen-1)*65+chn-64;
                    if isfield(ratespiking_pensplit.(pencheck).(AMPcheck),(stimchncheck))
                        %check if there are fields P2,P3,P4 and P5
                        if isfield(ratespiking_pensplit.(pencheck).(AMPcheck).(stimchncheck),'P1') && isfield(ratespiking_pensplit.(pencheck).(AMPcheck).(stimchncheck),'P2') && isfield(ratespiking_pensplit.(pencheck).(AMPcheck).(stimchncheck),'P3') && isfield(ratespiking_pensplit.(pencheck).(AMPcheck).(stimchncheck),'P4') && isfield(ratespiking_pensplit.(pencheck).(AMPcheck).(stimchncheck),'P5')
                            for Pulse=1:5
                                Pulsecheck=['P' num2str(Pulse)];
                                avgstitchdata.(AMPcheck).(Pulsecheck)=[];
                                %check significant channels in ratespiking_pensplit
%                                 thresh=squeeze(mean(ratespiking_pensplit.(pencheck).(AMPcheck).(stimchncheck).(Pulsecheck)(:,subselectbaseline),2)+(std(ratespiking_pensplit.(pencheck).(AMPcheck).(stimchncheck).(Pulsecheck)(:,subselectbaseline),[],2).*SD_supression));
%                                 notsigsingle=squeeze(mean(ratespiking_pensplit.(pencheck).(AMPcheck).(stimchncheck).(Pulsecheck)(:,timepeak),2))<=thresh;    
%                                 ratespiking_pensplit.(pencheck).(AMPcheck).(stimchncheck).(Pulsecheck)(notsigsingle,:)=nan;
                                if isfield(datincludestack,(AMPcheck)) && isfield(datincludestack.(AMPcheck),(Pulsecheck))
                                    datincludestack.(AMPcheck).(Pulsecheck)=cat(1,datincludestack.(AMPcheck).(Pulsecheck),ratespiking_pensplit.(pencheck).(AMPcheck).(stimchncheck).(Pulsecheck));
                                else
                                    datincludestack.(AMPcheck).(Pulsecheck)=ratespiking_pensplit.(pencheck).(AMPcheck).(stimchncheck).(Pulsecheck);
                                end
                                for pulseit=5:-1:Pulse
                                     Pulsecheck2=['P' num2str(pulseit)];
                                     if pulseit==Pulse
                                        stitchdata.(pencheck).(AMPcheck).(stimchncheck).(Pulsecheck2)(:,94+ceil(windowsize*(Pulse-1)):391)=ratespiking_pensplit.(pencheck).(AMPcheck).(stimchncheck).(Pulsecheck)(:,94+ceil(windowsize*(Pulse-1)):391);
                                        stitchdata.(pencheck).(AMPcheck).(stimchncheck).(Pulsecheck2)(:,1:90)=ratespiking_pensplit.(pencheck).(AMPcheck).(stimchncheck).(Pulsecheck)(:,1:90);
                                     elseif pulseit>Pulse
                                         stitchdata.(pencheck).(AMPcheck).(stimchncheck).(Pulsecheck2)(:, 94+ceil(windowsize*(Pulse-1)):94+ceil(windowsize*(Pulse)))=ratespiking_pensplit.(pencheck).(AMPcheck).(stimchncheck).(Pulsecheck)(:, 94+ceil(windowsize*(Pulse-1)):94+ceil(windowsize*(Pulse)));
                                     end
                                end
                            end
                            for pulse=1:5
                                pcheck=(['P' num2str(pulse)]);
                                stitchdata.(pencheck).(AMPcheck).(stimchncheck).(pcheck)(sum(stitchdata.(pencheck).(AMPcheck).(stimchncheck).(pcheck)(:,94:181),2)==0,:)=nan;
                            %add the numbers between columns 94 and 120 of the stitchdata then average the counts for each row, stim channel and pulse
                            spikecountStitch.(AMPcheck)(1:64,pulse,countit)=sum(stitchdata.(pencheck).(AMPcheck).(stimchncheck).(pcheck)(:,94:120),2);
                            spikecountStitchsup.(AMPcheck)(1:64,pulse,countit)=sum(stitchdata.(pencheck).(AMPcheck).(stimchncheck).(pcheck)(:,120:175),2);

                            end
                        end
                    end
                end
            end
        end
    end
end
% plot spikecountstitch average for each pulse on a figure for each amplitude
figure;
p=panel();
p.pack(2,2);
spikcount=nan(5,5);
spikecountsem=nan(5,5);
supspikecount=nan(5,5);
spikecountsemsup=nan(5,5);
dataforanova=[];
dataforanovasup=[];
F1=[];
F2=[];
for AMP=1:length(AMPall)
    AMPcheck=['A' num2str(AMPall(AMP))];

        if isfield(spikecountStitch,(AMPcheck)) 
            p(1,1).select();
            hold on;
            dat=reshape(permute(spikecountStitch.(AMPcheck),[2,1,3]),[5,64*size(spikecountStitch.(AMPcheck),3)]);
            dataforanova=[dataforanova, dat];
            F1=[F1,ones(size(dat)).*AMPall(AMP)];
            F2=[F2,repmat([1; 2; 3; 4; 5],[1,size(dat,2)])];
            spikcount(AMP,:)=mean(dat,2,'omitnan');
            spikecountsem(AMP,:)=SEM(dat,1);
            errorbar(1:5,spikcount(AMP,:),spikecountsem(AMP,:),'Color',[0 AMP/length(AMPall) 1/AMP])
            p(1,2).select();
            hold on;
            dat2=reshape(permute(spikecountStitchsup.(AMPcheck),[2,1,3]),[5,64*size(spikecountStitch.(AMPcheck),3)]);
            errorbar(1:5,mean(dat2,2,'omitnan'),SEM(dat2,1),'Color',[0 AMP/length(AMPall) 1/AMP])
             dataforanovasup=[dataforanovasup, dat2];
             supspikecount(AMP,:)=mean(dat2,2,'omitnan');
              spikecountsemsup(AMP,:)=SEM(dat2,1);
        end

end

p(1,1).select();
    title('Select data Stitched spike count response 4-30ms after stim')
    ylabel('Sp/s')
    xlabel('# Pulses')
    set(gca,'TickDir','out');
p(1,2).select();
    title('Select data Stitched spike count response 31-85ms after stim')
    ylabel('Sp/s')
    xlabel('# Pulses')
    set(gca,'TickDir','out');
    lgd=legend('2','5','6','8','10');
    lgd.Title.String = 'Current \muA';
    

for pulse=1:5
     p(2,1).select();
            hold on;
 errorbar(AMPall,spikcount(:,pulse),spikecountsem(:,pulse),'Color',[0 pulse/length(Pulseall) 1/pulse])
 p(2,2).select();
 hold on;
  errorbar(AMPall,supspikecount(:,pulse),spikecountsemsup(:,pulse),'Color',[0 pulse/length(Pulseall) 1/pulse])
end

p(2,1).select();
    title('Select data Stitched spike count response 4-30ms after stim')
    ylabel('Sp/s')
    xlabel('Current \muA')
    set(gca,'TickDir','out');
p(2,2).select();
    title('Select data Stitched spike count response 31-85ms after stim')
    ylabel('Sp/s')
    xlabel('Current \muA')
    set(gca,'TickDir','out');
    lgd=legend('1','2','3','4','5');
    lgd.Title.String = '# Pulses';
    
    
    
    
    figure;
[p,tbl,stats]=anovan(dataforanova(:),{F1(:),F2(:)});
[results,~,~,gnames] = multcompare(stats,"Dimension",[1 2]);
title('1-30ms stitched data spike count')
figure;
[p,tbl,stats]=anovan(dataforanovasup(:),{F1(:),F2(:)});
[results,~,~,gnames] = multcompare(stats,"Dimension",[1 2]);
title('30-75ms stitched data spike count')
    

    chargeinjection=AMPall.*Pulseall';
    figure;
    %make scatter plot with errorbars using SEM
    errorbar(chargeinjection(:),spikcount(:),spikecountsem(:),'*')
    title('Select data Stitched data spike count (4-30ms)')
    xlabel('Total charge injection (uA)')
    ylabel('Spike count')



    %plot sititchdata time vs spiking for each current and pulse
    for AMP=1:length(AMPall)
        AMPcheck=['A' num2str(AMPall(AMP))];
        for Pulse=1:5
            Pulsecheck=['P' num2str(Pulse)];
            for pen=1:6
                pencheck=['Pen' num2str(pen)];
                for stimchn=65:128
                    stimchncheck=['SChn' num2str(stimchn)];
                    if isfield(stitchdata,(pencheck)) && isfield(stitchdata.(pencheck).(AMPcheck),(stimchncheck))
                        
                        avgstitchdata.(AMPcheck).(Pulsecheck)=[avgstitchdata.(AMPcheck).(Pulsecheck); stitchdata.(pencheck).(AMPcheck).(stimchncheck).(Pulsecheck)];
                        
                    end
                end
            end
        end
    end
%plot the average of the stitched data
figure
p = panel();
p.pack(2, 3);
significantstitch=nan(length(Pulseall),length(AMPall));
datascatterplot=nan(length(Pulseall),length(AMPall),size(avgstitchdata.A2.P1,1));
datatimerecove=nan(length(Pulseall),length(AMPall),size(avgstitchdata.A2.P1,1));
datasupp=nan(length(Pulseall),length(AMPall),size(avgstitchdata.A2.P1,1));
for AMP=1:length(AMPall)
    AMPcheck=['A' num2str(AMPall(AMP))];
    if AMP<4
        p(1,AMP).select();
    else
        p(2,AMP-3).select();
    end
    ax=p.de.axis;
    ax=ax(AMP);
    hold on
    for Pulse=1:5
        Pulsecheck=['P' num2str(Pulse)];
            stdshade(avgstitchdata.(AMPcheck).(Pulsecheck),0.2,[0 Pulse/length(Pulseall) 1/Pulse],[-90:300],1,ax)
            significantstitch(AMP,Pulse)=sum(~isnan(avgstitchdata.(AMPcheck).(Pulsecheck)(:,1)));
            datascatterplot(AMP,Pulse,:)=mean(avgstitchdata.(AMPcheck).(Pulsecheck)(:,94:180),2);
            for i=1:size(avgstitchdata.(AMPcheck).(Pulsecheck),2)
                datasupp(AMP,Pulse,i)=mean(avgstitchdata.(AMPcheck).(Pulsecheck)(i,120:180),2);
                if ~isnan(mean(avgstitchdata.(AMPcheck).(Pulsecheck)(i,1:90),2)) && ~isempty(find(avgstitchdata.(AMPcheck).(Pulsecheck)(i,120:180)>=mean(avgstitchdata.(AMPcheck).(Pulsecheck)(i,1:90),2),1,'first'))
                    datatimerecove(AMP,Pulse,i)=find(avgstitchdata.(AMPcheck).(Pulsecheck)(i,120:180)>=mean(avgstitchdata.(AMPcheck).(Pulsecheck)(i,1:90),2),1,'first')+29;
                elseif ~isnan(mean(avgstitchdata.(AMPcheck).(Pulsecheck)(i,1:90),2))
                    datatimerecove(AMP,Pulse,i)=90;
                else
                    datatimerecove(AMP,Pulse,i)=nan;
                end
            end
    end
    xlim([0,90])
    title(['Select data ' num2str(AMPall(AMP)) '\muA'])
    ylabel('Sp/s')
    xlabel('Time (ms)')
    set(gca,'TickDir','out');
end

%recovery time from 30ms for select data
figure
xamp=repmat(AMPall',[1,5]);
ypulse=repmat(Pulseall,[5,1]);
zdat=mean(datatimerecove,3,'omitnan');
surf(xamp,ypulse,zdat)%% this isn't working
xlabel('Current (\muA)')
ylabel('# Pulses')
c=colorbar;
c.Label.String='Time (ms)';
title('Time to return to baseline following suppresion')

figure
p=panel();
p.pack(1,2);
p(1,1).select();
title('Time to return to baseline following suppresion')
hold on
f=fit(xamp(:),zdat(:),'poly1');
plot(f,xamp(:),zdat(:),'o');
xlabel('Current (\muA)')
ylabel('Time (ms)')
p(1,2).select();
title('Time to return to baseline following suppresion')
hold on
f=fit(ypulse(:),zdat(:),'poly1');
plot(f,ypulse(:),zdat(:),'o');
xlabel('# Pulses')
ylabel('Time (ms)')

%avg suppression
% figure
% xamp=repmat(AMPall',[1,5]);
% ypulse=repmat(Pulseall,[5,1]);
% zdat=mean(datasupp,3,'omitnan');
% scatter3(xamp(:),ypulse(:),zdat(:),100,zdat(:),'filled')
% xlabel('Current (\muA)')
% ylabel('# Pulses')
% c=colorbar;
% c.Label.String='Sp/s';
% % c.Limits=[min(zdat(:)) max(zdat(:))];
% % caxis([min(zdat) max(zdat)])
% title('Mean supp sp/s')



%now plot datincludestack also make sure the data is significant
datincludestack_supression=datincludestack;
ratespiking_mean=zeros(length(AMPall),length(Pulseall));    
ratespiking_std=zeros(length(AMPall),length(Pulseall));
ratepeak=zeros(length(AMPall),length(Pulseall));
ratepeakstd=zeros(length(AMPall),length(Pulseall));
numelect=zeros(length(AMPall)+1,5+1);
numelect(1,2:end)=Pulseall;
numelect(2:end,1)=AMPall';
figure;
p = panel();
p.pack(2, 3);
for AMP=1:length(AMPall)
    AMPcheck=['A' num2str(AMPall(AMP))];
    if AMP<4
        p(1,AMP).select();
    else
        p(2,AMP-3).select();
    end
    ax=p.de.axis;
    ax=ax(AMP);
    hold on
    for Pulse=1:5
        Pulsecheck=['P' num2str(Pulse)];
        timepeak=round(90+Pulse*3.333):round(120+Pulse*3.333);
        if isfield(datincludestack,(AMPcheck)) && isfield(datincludestack.(AMPcheck),(Pulsecheck))
%             thresh = squeeze(mean(datincludestack.(AMPcheck).(Pulsecheck)(:,subselectbaseline),2)+(std(datincludestack.(AMPcheck).(Pulsecheck)(:,subselectbaseline),[],2).*3));
%             notsigsingle = squeeze(mean(datincludestack.(AMPcheck).(Pulsecheck)(:,timepeak),2))<=thresh;
%             datincludestack.(AMPcheck).(Pulsecheck)(notsigsingle,:)=nan;
            numelect(AMP+1,Pulse+1)= sum(~isnan(datincludestack.(AMPcheck).(Pulsecheck)(:,1)));
            length(notsigsingle)-sum(notsigsingle)
            ratespiking_mean(AMP,Pulse)=nanmean(datincludestack.(AMPcheck).(Pulsecheck)(:,timepeak),'all');%nanmean(maxdat(maxdat~=0),'all');%nanmean(ratespiking.(AMPcheck).(Pulsecheck)(:,avgtime),'all');
            ratespiking_std(AMP,Pulse)=SEM(datincludestack.(AMPcheck).(Pulsecheck)(:,timepeak),0);
            %peakvals
            maxdat=max(datincludestack.(AMPcheck).(Pulsecheck)(:,round(90+Pulse*3.333):round(95+Pulse*3.333)),[],2);
            ratepeak(AMP,Pulse)=mean(maxdat,'omitnan');
            ratepeakstd(AMP,Pulse)=SEM(maxdat,0);
            stdshade(datincludestack.(AMPcheck).(Pulsecheck),0.2,[0 Pulse/length(Pulseall) 1/Pulse],[-90:300],1,ax);
        end
    end
    xlim([-90,90])
    title(['Select data NOT stitch ' num2str(AMPall(AMP)) '\muA'])
    ylabel('Sp/s')
    xlabel('Time (ms)')
    set(gca,'TickDir','out');
    ylim([0 95])
    for j = 2:size(numelect,2)
        text(j*10-80, 65, num2str(numelect(AMP+1,j)), 'HorizontalAlignment', 'center');
    end

end
% p(2,3).select();
% hold on
% for Pulse=1:5
%     errorbar(AMPall,ratespiking_mean(:,Pulse),ratespiking_std(:,Pulse),'Color',[0 Pulse/length(Pulseall) 1/Pulse])
% end
% lgd=legend('2','3','4','5');
% lgd.Title.String = '# pulses';
% title('Average 1-40ms after stim')
% ylabel('Sp/s')
% xlabel('Current \muA')
% set(gca,'TickDir','out');

%plot the peak data and average
figure;
p = panel;
p.pack(1,2)
p(1,1).select();
hold on
for Pulse=1:5
    errorbar(AMPall,ratepeak(:,Pulse),ratepeakstd(:,Pulse),'Color',[0 Pulse/length(Pulseall) 1/Pulse])
end
lgd=legend('2','3','4','5');
lgd.Title.String = '# pulses';
title('Select data NOT stitch Peak response')
ylabel('Sp/s')
xlabel('Current \muA')
set(gca,'TickDir','out');
%for p2 plot the average
p(1,2).select();
hold on
for Pulse=1:5
    errorbar(AMPall,ratespiking_mean(:,Pulse),ratespiking_std(:,Pulse),'Color',[0 Pulse/length(Pulseall) 1/Pulse])
end

lgd=legend('2','3','4','5');
lgd.Title.String = '# pulses';
title('Select data NOT stitch Average 1-30ms after stim')
ylabel('Sp/s')
xlabel('Current \muA')
set(gca,'TickDir','out');

%% plot against Pulse on x axis and current as different lines

figure;
p = panel;
p.pack(1,2)
p(1,1).select();
hold on
for AMP=1:length(AMPall)
    errorbar(Pulseall,ratepeak(AMP,:),ratepeakstd(AMP,:),'Color',[0 AMP/length(AMPall) 1/AMP])
end
lgd=legend('2','5','6','8','10');
lgd.Title.String = 'Current \muA';
title('Select data NOT stitch Peak response')
ylabel('Sp/s')
xlabel('# Pulses')
set(gca,'TickDir','out');
%for p2 plot the average
p(1,2).select();
hold on
for AMP=1:length(AMPall)
    errorbar(Pulseall,ratespiking_mean(AMP,:),ratespiking_std(AMP,:),'Color',[0 AMP/length(AMPall) 1/AMP])
end
lgd=legend('2','5','6','8','10');
lgd.Title.String = 'Current \muA';
title('Select data NOT stitch Average 1-30ms after stim')
ylabel('Sp/s')
xlabel('# Pulses')
set(gca,'TickDir','out');
end
%%
% %suppression data
% ratespiking_suppression_mean=zeros(length(AMPall),length(Pulseall));
% ratespiking_suppression_std=zeros(length(AMPall),length(Pulseall));
% ratepeak_suppression=zeros(length(AMPall),length(Pulseall));
% ratepeakstd_suppression=zeros(length(AMPall),length(Pulseall));
% numelect=zeros(length(AMPall)+1,5+1);
% numelect(1,2:end)=Pulseall;
% numelect(2:end,1)=AMPall';
% 
% figure;
% p = panel();
% p.pack(2, 3);
% for AMP=1:length(AMPall)
%     AMPcheck=['A' num2str(AMPall(AMP))];
%     if AMP<4
%         p(1,AMP).select();
%     else
%         p(2,AMP-3).select();
%     end
%     ax=p.de.axis;
%     ax=ax(AMP);
%     hold on
%     for Pulse=1:5
%         Pulsecheck=['P' num2str(Pulse)];
%         timesup=round(100+Pulse*3.333):175;
%         if isfield(datincludestack_supression,(AMPcheck)) && isfield(datincludestack_supression.(AMPcheck),(Pulsecheck))
%             thresh = squeeze(mean(datincludestack_supression.(AMPcheck).(Pulsecheck)(:,subselectbaseline),2)-(std(datincludestack_supression.(AMPcheck).(Pulsecheck)(:,subselectbaseline),[],2).*SD_supression));
%             notsigsingle = squeeze(mean(datincludestack_supression.(AMPcheck).(Pulsecheck)(:,timesup),2))>=thresh;
%             datincludestack_supression.(AMPcheck).(Pulsecheck)(notsigsingle,:)=nan;
%             numelect(AMP+1,Pulse+1)= sum(~isnan(datincludestack_supression.(AMPcheck).(Pulsecheck)(:,1)));
%             length(notsigsingle)-sum(notsigsingle)
%             ratespiking_suppression_mean(AMP,Pulse)=nanmean(datincludestack_supression.(AMPcheck).(Pulsecheck)(:,timesup),'all');
%             ratespiking_suppression_std(AMP,Pulse)=SEM(datincludestack_supression.(AMPcheck).(Pulsecheck)(:,timesup),0);
%             %peakvals
%             maxdat=max(datincludestack_supression.(AMPcheck).(Pulsecheck)(:,timesup),[],2);
%             ratepeak_suppression(AMP,Pulse)=mean(maxdat,'omitnan');
%             ratepeakstd_suppression(AMP,Pulse)=SEM(maxdat,0);
%             stdshade(datincludestack_supression.(AMPcheck).(Pulsecheck),0.2,[0 Pulse/length(Pulseall) 1/Pulse],[-90:300],1,ax);
%         end
%     end
%     xlim([-90,90])
%     title(['Select data NOT stitch suppression' num2str(AMPall(AMP)) '\muA'])
%     ylabel('Sp/s')
%     xlabel('Time (ms)')
%     set(gca,'TickDir','out');
%     ylim([-20 75])
%     for j = 2:size(numelect,2)
%         text(j*10-80, 65, num2str(numelect(AMP+1,j)), 'HorizontalAlignment', 'center');
%     end
% end
% % p(2,3).select();
% % hold on
% % for Pulse=1:5
% %     errorbar(AMPall,ratespiking_suppression_mean(:,Pulse),ratespiking_suppression_std(:,Pulse),'Color',[0 Pulse/length(Pulseall) 1/Pulse])
% % end
% % lgd=legend('2','3','4','5');
% % lgd.Title.String = '# pulses';
% % title('Average 1-40ms after stim')
% % ylabel('Sp/s')
% % xlabel('Current \muA')
% % set(gca,'TickDir','out');
% 
% %plot the peak data and average
% figure;
% p = panel;
% p.pack(1,2)
% p(1,1).select();
% hold on
% for Pulse=1:5
%     errorbar(AMPall,ratepeak_suppression(:,Pulse),ratepeakstd_suppression(:,Pulse),'Color',[0 Pulse/length(Pulseall) 1/Pulse])
% end
% lgd=legend('2','3','4','5');
% lgd.Title.String = '# pulses';
% title('Select data NOT stitch suppression Peak response')
% ylabel('Sp/s')
% xlabel('Current \muA')
% set(gca,'TickDir','out');
% %for p2 plot the average
% p(1,2).select();
% hold on
% for Pulse=1:5
%     errorbar(AMPall,ratespiking_suppression_mean(:,Pulse),ratespiking_suppression_std(:,Pulse),'Color',[0 Pulse/length(Pulseall) 1/Pulse])
% end
% lgd=legend('2','3','4','5');
% lgd.Title.String = '# pulses';
% title('Select data NOT stitch suppression Average 1-30ms after stim')
% ylabel('Sp/s')
% xlabel('Current \muA')
% set(gca,'TickDir','out');
% 
% %plot based on pulses
% figure;
% p = panel;
% p.pack(1,2)
% p(1,1).select();
% hold on
% for AMP=1:length(AMPall)
%     errorbar(Pulseall,ratepeak_suppression(AMP,:),ratepeakstd_suppression(AMP,:),'Color',[0 AMP/length(AMPall) 1/AMP])
% end
% lgd=legend('2','5','6','8','10');
% lgd.Title.String = 'Current \muA';
% title('Select data NOT stitch suppression Peak response')
% ylabel('Sp/s')
% xlabel('# Pulses')
% set(gca,'TickDir','out');
% %for p2 plot the average
% p(1,2).select();
% hold on
% for AMP=1:length(AMPall)
%     errorbar(Pulseall,ratespiking_suppression_mean(AMP,:),ratespiking_suppression_std(AMP,:),'Color',[0 AMP/length(AMPall) 1/AMP])
% end
% lgd=legend('2','5','6','8','10');
% lgd.Title.String = 'Current \muA';
% title('Select data NOT stitch suppression Average 1-30ms after stim')
% ylabel('Sp/s')
% xlabel('# Pulses')
% set(gca,'TickDir','out');
% 
% end